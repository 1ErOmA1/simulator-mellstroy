import 'package:audioplayers/audioplayers.dart';
import 'package:flutter/foundation.dart' show kIsWeb;

class AudioManager {
  static final AudioManager _instance = AudioManager._internal();
  factory AudioManager() => _instance;

  final AudioPlayer _player = AudioPlayer();
  final AudioPlayer _musicPlayer = AudioPlayer(); // üéµ –æ—Ç–¥–µ–ª—å–Ω—ã–π –ø–ª–µ–µ—Ä –¥–ª—è —Ñ–æ–Ω–æ–≤–æ–π –º—É–∑—ã–∫–∏

  bool _musicStarted = false;

  AudioManager._internal();

  /// üîä –ü—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏–µ –∫–æ—Ä–æ—Ç–∫–∏—Ö –∑–≤—É–∫–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–ª–∏–∫)
  Future<void> play(String assetPath) async {
    try {
      await _player.play(AssetSource(assetPath));
    } catch (e) {
      print('Audio play error: $e');
    }
  }

  /// üé∂ –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ñ–æ–Ω–æ–≤–æ–π –º—É–∑—ã–∫–∏ (–≤ —Ü–∏–∫–ª–µ)
  Future<void> playBackgroundMusic(String assetPath) async {
    if (_musicStarted) return; // —á—Ç–æ–±—ã –Ω–µ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ

    try {
      await _musicPlayer.setReleaseMode(ReleaseMode.loop);
      await _musicPlayer.setVolume(0.5);

      if (kIsWeb) {
        // üïπ –ù–∞ Web –∂–¥—ë–º –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        print("‚è∏ Web: –º—É–∑—ã–∫–∞ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –∫–ª–∏–∫–∞.");
      } else {
        // üì± –ù–∞ Android / iOS –∑–∞–ø—É—Å–∫–∞–µ–º —Å—Ä–∞–∑—É
        await _musicPlayer.play(AssetSource(assetPath));
        _musicStarted = true;
        print("üéµ –§–æ–Ω–æ–≤–∞—è –º—É–∑—ã–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ (–º–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è).");
      }
    } catch (e) {
      print('Music play error: $e');
    }
  }

  /// üöÄ –ó–∞–ø—É—Å–∫ –º—É–∑—ã–∫–∏ –≤—Ä—É—á–Ω—É—é (–¥–ª—è Web –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è)
  Future<void> startMusicManually(String assetPath) async {
    if (_musicStarted) return;
    try {
      await _musicPlayer.setReleaseMode(ReleaseMode.loop);
      await _musicPlayer.setVolume(0.5);
      await _musicPlayer.play(AssetSource(assetPath));
      _musicStarted = true;
      print("üé∂ –§–æ–Ω–æ–≤–∞—è –º—É–∑—ã–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞ –≤—Ä—É—á–Ω—É—é (Web).");
    } catch (e) {
      print('Manual music start error: $e');
    }
  }

  /// ‚èπ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–æ–Ω–æ–≤–æ–π –º—É–∑—ã–∫–∏
  Future<void> stopBackgroundMusic() async {
    try {
      await _musicPlayer.stop();
      _musicStarted = false;
    } catch (e) {
      print('Music stop error: $e');
    }
  }
}
